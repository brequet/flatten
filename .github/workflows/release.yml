name: Release

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  # Test job to ensure code quality before release
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Check formatting
        run: cargo fmt -- --check

  # Build job for cross-platform compilation
  build:
    name: Build
    needs: test
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: flatten-linux-x86_64
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            name: flatten-windows-x86_64.exe
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: flatten-linux-aarch64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binary
        run: cross build --release --target ${{ matrix.target }}

      - name: Rename binary
        run: |
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv target/${{ matrix.target }}/release/flatten.exe ${{ matrix.name }}
          else
            mv target/${{ matrix.target }}/release/flatten ${{ matrix.name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  # Release job - only runs on main branch pushes
  release:
    name: Release
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate release tag
        id: tag
        run: |
          # Generate a timestamp-based version
          VERSION="v$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          name: Release ${{ steps.tag.outputs.version }}
          body: |
            ## Changes
            - Auto-generated release from main branch
            - Commit: ${{ github.sha }}

            ## Downloads
            - **Linux x86_64**: `flatten-linux-x86_64`
            - **Linux ARM64**: `flatten-linux-aarch64`  
            - **Windows x86_64**: `flatten-windows-x86_64.exe`
          files: |
            artifacts/*/flatten-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
